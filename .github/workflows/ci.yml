name: ci

env:
  CTEST_NO_TESTS_ACTION: error
  CTEST_PARALLEL_LEVEL: 4
  CMAKE_BUILD_PARALLEL_LEVEL: 4

on:
  push:
    paths:
      - "**.f90"
      - "**.F90"
      - "**.c"
      - "**.cpp"
      - "**.cmake"
      - "**/CMakeLists.txt"
      - ".github/workflows/ci.yml"

jobs:

  linux-gcc:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        gcc-version: [9, 10, 11, 12, 13]

    env:
      CC: gcc-${{ matrix.gcc-version }}
      CXX: g++-${{ matrix.gcc-version }}
      FC: gfortran-${{ matrix.gcc-version }}

    steps:

    - name: install ninja
      run: sudo apt install --no-install-recommends ninja-build

    - uses: actions/checkout@v4

    - run: cmake --workflow --preset debug
    - run: cmake --workflow --preset release


  valgrind-memory:
    runs-on: ubuntu-latest
    needs: linux-gcc
    timeout-minutes: 10

    steps:
    - name: install valgrind
      run: |
        sudo apt update
        sudo apt install --no-install-recommends valgrind

    - uses: actions/checkout@v4

    - run: ctest -S memcheck.cmake -V -E Fortran_nano_sleep


  linux-clang:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        clang-version: [13, 14, 15]

    env:
      CC: clang-${{ matrix.clang-version }}
      CXX: clang++-${{ matrix.clang-version }}
      FC: gfortran

    steps:
    - uses: actions/checkout@v4

    - name: install ninja
      run: sudo apt install --no-install-recommends ninja-build

    - run: cmake --workflow --preset debug
    - run: cmake --workflow --preset release

    - run: cat build/CMakeFiles/CMakeConfigureLog.yaml
      if: ${{ failure() }}


  windows:
    runs-on: windows-latest
    needs: linux-gcc
    timeout-minutes: 10

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: mingw-w64-x86_64-gcc-fortran

    - name: Put MSYS2_MinGW64 on PATH
      run: echo "${{ runner.temp }}/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - uses: actions/checkout@v4

    - run: cmake --workflow --preset default
      env:
        CMAKE_GENERATOR: "MinGW Makefiles"

    - run: cat build/CMakeFiles/CMakeConfigureLog.yaml
      if: ${{ failure() }}

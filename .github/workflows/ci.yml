name: ci

env:
  CTEST_NO_TESTS_ACTION: error
  CTEST_PARALLEL_LEVEL: 0
  CMAKE_BUILD_PARALLEL_LEVEL: 4

on:
  push:
    paths:
      - "**.f90"
      - "**.F90"
      - "**.c"
      - "**.cpp"
      - "**.h"
      - "**.cmake"
      - "**/CMakeLists.txt"
      - ".github/workflows/ci.yml"

jobs:

  linux-gcc14:
    runs-on: ubuntu-24.04
    timeout-minutes: 15

    strategy:
      matrix:
        gcc-version: [12, 13, 14]

    env:
      CC: gcc-${{ matrix.gcc-version }}
      CXX: g++-${{ matrix.gcc-version }}
      FC: gfortran-${{ matrix.gcc-version }}

    steps:
    - uses: actions/checkout@v4

    - uses: ./.github/workflows/composite-unix


  linux-gcc9:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        gcc-version: [9, 10, 11]

    env:
      CC: gcc-${{ matrix.gcc-version }}
      CXX: g++-${{ matrix.gcc-version }}
      FC: gfortran-${{ matrix.gcc-version }}

    steps:
    - uses: actions/checkout@v4

    - uses: ./.github/workflows/composite-unix


  valgrind-memory:
    runs-on: ubuntu-24.04
    needs: linux-gcc14
    timeout-minutes: 10

    steps:
    - name: install valgrind
      run: |
        sudo apt update
        sudo apt install --no-install-recommends valgrind

    - uses: actions/checkout@v4

    - run: ctest -S memcheck.cmake -V -E Fortran_nano_sleep


  linux-clang:
    runs-on: ubuntu-24.04
    timeout-minutes: 15

    strategy:
      matrix:
        clang-version: [17, 18]

    env:
      CC: clang-${{ matrix.clang-version }}
      CXX: clang++-${{ matrix.clang-version }}
      FC: gfortran

    steps:
    - uses: actions/checkout@v4

    - uses: ./.github/workflows/composite-unix


  mac:
    # need Apple Silicon for exception handling try_compile detection to work
    runs-on: macos-14
    timeout-minutes: 10

    strategy:
      matrix:
        c: [{cc: clang, cxx: clang++}, {cc: gcc-13, cxx: g++-13}]

    env:
      FC: gfortran-13
      CC: ${{ matrix.c.cc }}
      CXX: ${{ matrix.c.cxx }}

    steps:
    - uses: actions/checkout@v4

    - uses: ./.github/workflows/composite-unix


  windows:
    runs-on: windows-latest
    timeout-minutes: 10

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: mingw-w64-x86_64-gcc-fortran

    - name: Put MSYS2_MinGW64 on PATH
      run: echo "${{ runner.temp }}/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - uses: actions/checkout@v4

    - run: cmake --workflow --preset default
      env:
        CMAKE_GENERATOR: "MinGW Makefiles"

    - run: cat build/CMakeFiles/CMakeConfigureLog.yaml
      if: ${{ failure() }}
